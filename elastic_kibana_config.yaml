---
- name: configure elasticsearch/kibana
  hosts: localhost
  vars_files: kibana_keys.yaml
  vars:
    kibana:
      - path: /etc/kibana/kibana.yml
        regex: '^#server.host:'
        line: "server.host: {{ ansible_default_ipv4['address'] }}"
      - path: /etc/kibana/kibana.yml
        regex: '^#server.port:'
        line: "server.port: 5601"
      - path: /etc/kibana/kibana.yml
        regex: '^#server.publicBaseUrl:'
        line: 'server.publicBaseUrl: "http://{{ ansible_default_ipv4.address }}:5601"'
    elastic:
      - path: /etc/elasticsearch/elasticsearch.yml
        regex: '^#network.host:'
        line: "network.host: {{ ansible_default_ipv4['address'] }}"
      - path: /etc/elasticsearch/elasticsearch.yml
        regex: '^#http.port:'
        line: "http.port: 9200"

  tasks:
  - name: create elastic token for kibana
    shell: '/usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token --scope kibana'
    register: enrollment_token

  - name: enroll kibana 
    shell: |
      sudo /usr/share/kibana/bin/kibana-setup --enrollment-token  {{ enrollment_token.stdout_lines[0] }}
  
  - name: reset password for elastic user
    shell: "/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic --batch | sed 's/^New value: //g'"
    register: password_result

  - name: create password_result file
    copy:
      content: "{{ password_result.stdout_lines[1] }}\n"
      dest: ./password_result
      owner: root
      group: root
  
  - name: generate encryption keys for kibana
    shell: 'sudo /usr/share/kibana/bin/kibana-encryption-keys generate | tail -4 >> kibana_keys.yaml'
  
  - name: Add xpack.encryptedSavedObjects.encryptionKey to Kibana keystore
    shell: |
        echo "{{ vars['xpack.encryptedSavedObjects.encryptionKey'] }}" | sudo /usr/share/kibana/bin/kibana-keystore add xpack.encryptedSavedObjects.encryptionKey --stdin
    
  - name: Add xpack.reporting.encryptionKey to Kibana keystore
    shell: |
        echo "{{ vars['xpack.reporting.encryptionKey'] }}" | sudo /usr/share/kibana/bin/kibana-keystore add xpack.reporting.encryptionKey --stdin

  - name: Add xpack.security.encryptionKey to Kibana keystore
    shell: |
        echo "{{ vars['xpack.security.encryptionKey'] }}" | sudo /usr/share/kibana/bin/kibana-keystore add xpack.security.encryptionKey --stdin

  - name: edit config files
    lineinfile:
      path: "{{ item.path }}"
      regex: "{{ item.regex }}"
      line: "{{ item.line }}"
    loop: "{{ elastic + kibana }}"
    
  - name: create fleet server policy and agent policy
    lineinfile:
      path: /etc/kibana/kibana.yml
      line: |
        xpack.fleet.packages:
          - name: fleet_server
            version: latest
          - name: system
            version: latest
          - name: zeek
            version: latest
          - name: winlog
            version: "2.1.2"
        xpack.fleet.agentPolicies:
          - name: Fleet Server policy
            id: fleet-server-policy
            namespace: default
            monitoring_enabled:
              - logs
              - metrics
            package_policies:
              - name: fleet-server-1
                package:
                  name: fleet_server
              - package:
                  name: zeek
                name: zeek-integration-1
                id: preconfigured-zeek-1
                inputs:
                  zeek-logfile:
                    enabled: true
                    vars:
                      base_paths:
                        - /usr/local/zeek/logs/current
                    streams:
                      '[zeek.connection]':
                        enabled: true
                        vars:
                          filenames:
                            - conn.log
                          preserve_original_event: true
                      '[zeek.dns]':
                        enabled: true
                        vars:
                          filenames:
                            - dns.log
                          preserve_original_event: false
                      '[zeek.files]':
                        enabled: true
                        vars:
                          filenames:
                            - files.log
                          preserve_original_event: false
                      '[zeek.http]':
                        enabled: true
                        vars:
                          filenames:
                            - http.log
                          preserve_original_event: true
                      '[zeek.notice]':
                        enabled: true
                        vars:
                          filenames:
                            - notice.log
                          preserve_original_event: false
                      '[zeek.weird]':
                        enabled: true
                        vars:
                          filenames:
                            - weird.log
                          preserve_original_event: false
          - name: Agent policy 1
            id: agent-policy-1
            namespace: default
            monitoring_enabled:
              - logs
              - metrics
            package_policies:
              - package:
                  name: system
                name: rhel-system-integration
                id: preconfigured-system-1
                inputs:
                  system-logfile:
                    enabled: true
                    streams:
                      '[system.auth]':
                        enabled: true
                        vars:
                          paths:
                            - /var/log/auth.log*
                            - /var/log/secure*
                          preserve_original_event: false
                          tags:
                            - system-auth
                      '[system.syslog]':
                        enabled: true
                        vars:
                          paths:
                            - /var/log/messages*
                            - /var/log/syslog*
                            - /var/log/system*
                          preserve_original_event: false
                  system-system/metrics:
                    enabled: true
                    streams:
                      '[system.core]':
                        enabled: true
                        vars:
                          period: 20s

              - package:
                  name: winlog
                name: winlog-sysmon
                id: preconfigured-winlog-sysmon
                inputs:
                  - type: winlog
                    enabled: true
                    streams:
                      - enabled: true
                        data_stream:
                          dataset: winlog.sysmon
                          type: logs
                        vars:
                          - name: channel
                            value: "Microsoft-Windows-Sysmon/Operational"
                          - name: preserve_original_event
                            value: false

        xpack.fleet.fleetServerHosts:
            - id: fleet-server-host-1
              name: Fleet Server Host 1
              host_urls:
                - https://{{ hostvars['node1']['ansible_host'] }}:8220
              is_default: true

  - name: retrieve enrollment_api_keys
    shell: |
      curl -X GET "{{ hostvars['localhost']['ansible_host'] }}:5601/api/fleet/enrollment_api_keys" -H "kbn-xsrf: true" -H "Content-Type: application/json" -u elastic:{{ lookup('file', '/root/elastic_labs/password_result') }}
    register: output
  - name: extract output
    set_fact:
      parsed_output: "{{ output.stdout_lines[0] | from_json }}"
  - name: extract api key
    set_fact:
      api_key: "{{ parsed_output.list[1].api_key }}"

  - name: add sysmon integration
    shell: |
      curl --request POST \
        --url "https://{{ hostvars['localhost']['inventory_host'] }}:5601/api/fleet/package_policies" \
        --header 'Authorization: ApiKey {{ api_key }}' \
        --header 'Content-Type: application/json' \
        --header 'kbn-xsrf: xx' \
        --data '{
        "policy_ids": [
          "agent-policy-1"
        ],
        "package": {
          "name": "winlog",
          "version": "2.1.2"
        },
        "name": "windows-sysmon",
        "inputs": {
          "winlogs-winlog": {
            "enabled": true,
            "streams": {
              "winlog.winlogs": {
                "enabled": true,
                "vars": {
                  "channel": "Microsoft-Windows-Sysmon/Operational",
                  "data_stream.dataset": "winlog.winlog",
                  "preserve_original_event": false,
                  "ignore_older": "72h"
                }
              }
            }
          }
        }
      }'

  - name: adjust kibana service file
    lineinfile:
      path: '/usr/lib/systemd/system/kibana.service'
      regex: '^RestartSec='
      line: RestartSec=5

  - name: reload systemd
    shell: 'systemctl daemon-reload'
  - name: restart services
    service:
      name: "{{ item }}"
      state: restarted
    loop:
      - elasticsearch
      - kibana    
