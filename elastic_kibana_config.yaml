---
- name: configure elasticsearch/kibana
  hosts: localhost
  vars_files: kibana_keys.yaml
  vars:
    kibana:
      - path: /etc/kibana/kibana.yml
        regex: '^#server.host:'
        line: "server.host: {{ ansible_default_ipv4['address'] }}"
      - path: /etc/kibana/kibana.yml
        regex: '^#server.port:'
        line: "server.port: 5601"
      - path: /etc/kibana/kibana.yml
        regex: '^#server.publicBaseUrl:'
        line: 'server.publicBaseUrl: "http://{{ ansible_default_ipv4.address }}:5601"'
    elastic:
      - path: /etc/elasticsearch/elasticsearch.yml
        regex: '^#network.host:'
        line: "network.host: {{ ansible_default_ipv4['address'] }}"
      - path: /etc/elasticsearch/elasticsearch.yml
        regex: '^#http.port:'
        line: "http.port: 9200"

  tasks:
  - name: create elastic token for kibana
    shell: '/usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token --scope kibana'
    register: enrollment_token

  - name: enroll kibana 
    shell: |
      sudo /usr/share/kibana/bin/kibana-setup --enrollment-token  {{ enrollment_token.stdout_lines[0] }}
  
  - name: reset password for elastic user
    shell: "/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic --batch | sed 's/^New value: //g'"
    register: password_result

  - name: create password_result file
    copy:
      content: "{{ password_result.stdout_lines[1] }}\n"
      dest: ./password_result
      owner: root
      group: root
  
  - name: generate encryption keys for kibana
    shell: 'sudo /usr/share/kibana/bin/kibana-encryption-keys generate | tail -4 >> kibana_keys.yaml'
  
  - name: Add xpack.encryptedSavedObjects.encryptionKey to Kibana keystore
    shell: |
        echo "{{ vars['xpack.encryptedSavedObjects.encryptionKey'] }}" | sudo /usr/share/kibana/bin/kibana-keystore add xpack.encryptedSavedObjects.encryptionKey --stdin
    
  - name: Add xpack.reporting.encryptionKey to Kibana keystore
    shell: |
        echo "{{ vars['xpack.reporting.encryptionKey'] }}" | sudo /usr/share/kibana/bin/kibana-keystore add xpack.reporting.encryptionKey --stdin

  - name: Add xpack.security.encryptionKey to Kibana keystore
    shell: |
        echo "{{ vars['xpack.security.encryptionKey'] }}" | sudo /usr/share/kibana/bin/kibana-keystore add xpack.security.encryptionKey --stdin

  - name: edit config files
    lineinfile:
      path: "{{ item.path }}"
      regex: "{{ item.regex }}"
      line: "{{ item.line }}"
    loop: "{{ elastic + kibana }}"
    
  - name: create fleet server policy and agent policy
    lineinfile:
      path: /etc/kibana/kibana.yml
      line: |
        xpack.fleet.packages:
          - name: fleet_server
            version: latest
          - name: elastic_agent
            version: latest
          - name: system
            version: latest
          - name: zeek
            version: latest
        xpack.fleet.agentPolicies:
          - name: Fleet Server policy
            id: fleet-server-policy
            namespace: default
            package_policies:
              - name: fleet-server-1
                package:
                  name: fleet_server
          - name: Agent policy 1
            id: agent-policy-1
            namespace: default
            monitoring_enabled:
              - logs
              - metrics
            package_policies:
              - package:
                  name: system
                name: system integration 1
                namespace: default
                id: preconfigured-system-1
                inputs:
                  system-logfile:
                    enabled: true
                    streams:
                      '[system.auth]':
                        enabled: true
                        vars:
                          paths:
                            - /var/log/auth.log*
                            - /var/log/secure*
                          preserve_original_event: false
                          tags:
                            - system-auth
                      '[system.syslog]':
                        enabled: true
                        vars:
                          paths:
                            - /var/log/messages*
                            - /var/log/syslog*
                            - /var/log/system*
                          preserve_original_event: false
                  system-system/metrics:
                    enabled: true
                    streams:
                      '[system.core]':
                        enabled: true
                        vars:
                          period: 10s
                          core.metrics:
                            - percentages
                          tags: []
                      '[system.cpu]':
                        enabled: true
                        vars:
                          period: 10s
                          cpu.metrics:
                            - percentages
                            - normalized_percentages
                          tags: []
                      '[system.diskio]':
                        enabled: true
                        vars:
                          period: 10s
                          diskio.include_devices: []
                          tags: []
                      '[system.filesystem]':
                        enabled: true
                        vars:
                          period: 1m
                          filesystem.ignore_types: []
                          tags: []
                          processors: |
                            - drop_event.when.regexp:
                                system.filesystem.mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)
                      '[system.load]':
                        enabled: true
                        vars:
                          period: 10s
                          tags: []
                      '[system.memory]':
                        enabled: true
                        vars:
                          period: 10s
                          tags: []
                      '[system.network]':
                        enabled: true
                        vars:
                          period: 10s
                          network.interfaces: []
                          tags: []
                      '[system.process]':
                        enabled: true
                        vars:
                          period: 10s
                          process.include_top_n.by_cpu: 5
                          process.include_top_n.by_memory: 5
                          process.cmdline.cache.enabled: true
                          process.cgroups.enabled: false
                          process.env.whitelist: []
                          process.include_cpu_ticks: false
                          processes:
                            - .*
                          tags: []
                      '[system.process.summary]':
                        enabled: true
                        vars:
                          period: 10s
                          tags: []
                      '[system.socket_summary]':
                        enabled: true
                        vars:
                          period: 10s
                          tags: []
                      '[system.uptime]':
                        enabled: true
                        vars:
                          period: 10s
                          tags: []

  - name: adjust kibana service file
    lineinfile:
      path: '/usr/lib/systemd/system/kibana.service'
      regex: '^RestartSec='
      line: RestartSec=5

  - name: reload systemd
    shell: 'systemctl daemon-reload'
  - name: restart services
    service:
      name: "{{ item }}"
      state: restarted
    loop:
      - elasticsearch
      - kibana    
