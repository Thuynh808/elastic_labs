---
- name: create ansible user with privileges
  hosts: local nodes
  tasks:

  - name: create ansible user
    user:
      name: ansible
      password: $6$cGUd3oF/o6jAkKV6$Dchj80B.Nmy6F3Fol6gOO79aVoFcnwgyrNluhGfCA8dimEeQc9Kmm0TzDYwmALSdQKQfRPxOloe6UzKgMCqBD0
      shell: /bin/bash
    when: inventory_hostname in groups['nodes']

  - name: give sudo privileges
    copy:
      content: "ansible ALL=(ALL) NOPASSWD: ALL\n"
      dest: /etc/sudoers.d/ansible
    when: inventory_hostname in groups['nodes']

  - name: create .ssh directory for user ansible
    file:
      path: /home/ansible/.ssh
      state: directory
      owner: ansible
      group: ansible
      mode: '0700'
    when: inventory_hostname in groups['local']

  - name: Generate ansible SSH keypair with the default values and no passphrase
    community.crypto.openssh_keypair:
      path: /home/ansible/.ssh/id_rsa
      owner: ansible
      group: ansible
    when: inventory_hostname in groups['local']

  - name: copy ansible public key
    authorized_key:
      user: ansible
      state: present
      key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
    when: inventory_hostname in groups['nodes']

  - name: generate /etc/hosts file with template
    template:
      src: ./etc_hosts.j2
      dest: /etc/hosts

  - name: toggle off ask_pass
    lineinfile:
      path: /home/ansible/elastic_labs/ansible.cfg
      regex: "{{ item.regex }}"
      line: "{{ item.line }}"
    when: inventory_hostname in groups['local']
    loop:
      - regex: '^ask_pass'
        line: ask_pass=false
      - regex: '^remote_user'
        line: remote_user=ansible

